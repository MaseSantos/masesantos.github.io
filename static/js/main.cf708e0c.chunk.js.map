{"version":3,"sources":["images/profile-pic.png","images/social-icons-03.png","images/social-icons-01.png","images/social-icons-05.png","components/carousel/carousel.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","theme","main","autoPlay","startAt","animation","InfoCarousel","className","navButtonsAlwaysVisible","style","href","class","Component","withStyles","App","src","ProfilePic","alt","InstagramIcon","TwitterIcon","GirlbossIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,2PCKrCC,G,OAAS,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,UAAU,EACVC,QAAS,EACTC,UAAW,YAITC,E,uKAEE,OACE,oCACE,kBAAC,IAAD,CACEC,UAAU,WACVC,yBAAyB,EACzBC,MAAOT,EAAOE,KACdC,UAAU,EACVC,QAAS,EACTC,UAAW,SAIX,gCACE,yBAAKE,UAAU,YACb,gCACE,yCAEF,2BACE,8KAQN,yBAAKA,UAAU,WACb,gCAIE,uBAAGG,KAAK,gCAAgCC,MAAM,UAC5C,sCAEF,uBACED,KAAK,0CACLC,MAAM,UAEN,gD,GAxCOC,aAmDZC,cAAWb,EAAXa,CAAmBP,G,iFCPnBQ,MAjDf,WACE,OACE,yBAAKP,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKQ,IAAKC,IAAYT,UAAU,WAAWU,IAAI,oBAC/C,6BACE,wBAAIV,UAAU,UAAd,8CACA,wBAAIA,UAAU,YAAd,+CAIF,kBAAC,EAAD,CAAUA,UAAU,aACpB,6BACE,gDACA,6BACE,uBAAGG,KAAK,+CACN,yBACEH,UAAU,kBACVQ,IAAKG,IACLD,IAAI,oBAGR,uBAAGP,KAAK,sCACN,yBACEH,UAAU,kBACVQ,IAAKI,IACLF,IAAI,kBAGR,uBAAGP,KAAK,6CACN,yBACEH,UAAU,kBACVQ,IAAKK,IACLH,IAAI,wBC7BAI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cf708e0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.32870d42.png\";","module.exports = __webpack_public_path__ + \"static/media/social-icons-03.767a7d77.png\";","module.exports = __webpack_public_path__ + \"static/media/social-icons-01.93e39b24.png\";","module.exports = __webpack_public_path__ + \"static/media/social-icons-05.37a7dd9c.png\";","import React, { Component } from 'react';\nimport Carousel from 'react-material-ui-carousel';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport './carousel.css'\n\nconst styles = (theme) => ({\n  main: {\n    autoPlay: false,\n    startAt: 1,\n    animation: \"slide\",\n  },\n});\n\nclass InfoCarousel extends Component {\n    render() {\n        return (\n          <>\n            <Carousel\n              className=\"carousel\"\n              navButtonsAlwaysVisible={true}\n              style={styles.main}\n              autoPlay={false}\n              startAt={0}\n              animation={\"slide\"}\n              //   width={\"50%\"}\n            >\n              {/* ITEM IN CAROUSEL!!! */}\n              <center>\n                <div className=\"about-me\">\n                  <center>\n                    <h3>About Me</h3>\n                  </center>\n                  <p>\n                    <i>\n                      I'm a software engineer and creative from Minnesota.\n                      Passionate about learning new technologies and using code\n                      to realize inclusive futures.\n                    </i>\n                  </p>\n                </div>\n              </center>\n              <div className=\"buttons\">\n                <center>\n                  {/* <a href=\"https://google.com\" class=\"button\">\n                    Website\n                  </a> */}\n                  <a href=\"https://github.com/MaseSantos\" class=\"button\">\n                    <p>Github</p>\n                  </a>\n                  <a\n                    href=\"https://www.linkedin.com/in/masesantos/\"\n                    class=\"button\"\n                  >\n                    <p>LinkedIn</p>\n                  </a>\n                </center>\n              </div>\n            </Carousel>\n          </>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(InfoCarousel);\n","import React from 'react';\nimport Carousel from '../carousel/carousel';\nimport './App.css';\nimport ProfilePic from \"../../images/profile-pic.png\"\nimport InstagramIcon from \"../../images/social-icons-03.png\";\nimport TwitterIcon from \"../../images/social-icons-01.png\";\nimport GirlbossIcon from \"../../images/social-icons-05.png\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={ProfilePic} className=\"user-pic\" alt=\"Picture of Mase\" />\n        <div>\n          <h2 className=\"header\">ðŸ”¥ THE MIDWEST MAMI ðŸ”¥</h2>\n          <h5 className=\"subtitle\">\n            Software Engineer | Shapeshifting Creative\n          </h5>\n        </div>\n        <Carousel className=\"carousel\" />\n        <div>\n          <h3>Let's Get Social</h3>\n          <div>\n            <a href=\"https://www.instagram.com/the.midwest.mami/\">\n              <img\n                className=\"important-links\"\n                src={InstagramIcon}\n                alt=\"Instagram Logo\"\n              />\n            </a>\n            <a href=\"https://twitter.com/themidwestmami\">\n              <img\n                className=\"important-links\"\n                src={TwitterIcon}\n                alt=\"Twitter Logo\"\n              />\n            </a>\n            <a href=\"https://community.girlboss.com/masesantos\">\n              <img\n                className=\"important-links\"\n                src={GirlbossIcon}\n                alt=\"Girlboss Logo\"\n              />\n            </a>\n          </div>\n          {/* <img\n                  src=\"images/social-icons-06.png\"\n                  alt=\"DEV Link\"\n                  width=\"5%\"\n                  height=\"5%\"\n                /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}